import screen_brightness_control as sbc
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–∂–∏–º–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —è—Ä–∫–æ—Å—Ç–∏
SET_BRIGHTNESS_KEYBOARD = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"), KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

async def set_brightness(message, user_data: dict = None):
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —è—Ä–∫–æ—Å—Ç–∏ –æ—Ç 0 –¥–æ 100:",
        reply_markup=SET_BRIGHTNESS_KEYBOARD
    )

async def set_brightness_value(message, user_data: dict = None):
    if message.text in ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "/cancel"]:
        return "CANCELLED"

    try:
        brightness = int(message.text.strip())
        if not (0 <= brightness <= 100):
            raise ValueError("–Ø—Ä–∫–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 100.")

        sbc.set_brightness(brightness)
        await message.answer(f"‚úÖ –Ø—Ä–∫–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {brightness}%.\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é.", reply_markup=SET_BRIGHTNESS_KEYBOARD)

    except ValueError as e:
        await message.answer(f"‚õî –û—à–∏–±–∫–∞: {e}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100.", reply_markup=SET_BRIGHTNESS_KEYBOARD)
    except Exception as e:
        await message.answer(f"‚õî –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞: {e}", reply_markup=SET_BRIGHTNESS_KEYBOARD)
        return "CANCELLED"
    return None