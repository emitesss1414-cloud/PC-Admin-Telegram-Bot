import os
import pyautogui
import pygetwindow as gw
import pygetwindow
import asyncio
from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

YOUTUBE_BUTTONS = [
    [KeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")],
    [KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
]

YOUTUBE_CONTROL_BUTTONS = [
    [KeyboardButton("‚èØÔ∏è –ü–∞—É–∑–∞/–í–æ—Å–ø—Ä."), KeyboardButton("‚è© –í–ø–µ—Ä—ë–¥ 5—Å"), KeyboardButton("‚è™ –ù–∞–∑–∞–¥ 5—Å")],
    [KeyboardButton("üîä –ì—Ä–æ–º—á–µ"), KeyboardButton("üîâ –¢–∏—à–µ")],
    [KeyboardButton("üî≤ –ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω"), KeyboardButton("üî≥ –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º")],
    [KeyboardButton("‚èπÔ∏è –°—Ç–æ–ø"), KeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
]

def get_youtube_windows():
    return [w for w in gw.getAllTitles() if 'youtube' in w.lower()]

async def youtube(message: types.Message, user_data: dict = None):
    if user_data is None:
        user_data = {}
    user_data['youtube_mode'] = True
    youtube_windows = get_youtube_windows()
    keyboard = ReplyKeyboardMarkup(keyboard=YOUTUBE_BUTTONS, resize_keyboard=True)

    if youtube_windows:
        msg = "–û—Ç–∫—Ä—ã—Ç—ã–µ –≤–∫–ª–∞–¥–∫–∏ YouTube:\n" + "\n".join(f"{i+1}. {w}" for i, w in enumerate(youtube_windows))
        msg += "\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ."
        user_data['youtube_tabs'] = youtube_windows
    else:
        msg = "–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –≤–∫–ª–∞–¥–æ–∫ YouTube. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ."
        user_data['youtube_tabs'] = []
    
    await message.answer(msg, reply_markup=keyboard)

async def youtube_link(message: types.Message, user_data: dict = None):
    if user_data is None:
        user_data = {}
    text = message.text.strip()
    keyboard = ReplyKeyboardMarkup(keyboard=YOUTUBE_BUTTONS, resize_keyboard=True)
    control_keyboard = ReplyKeyboardMarkup(keyboard=YOUTUBE_CONTROL_BUTTONS, resize_keyboard=True)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞/–æ—Ç–º–µ–Ω—ã
    if text in ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "/cancel"]:
        user_data.pop('youtube_mode', None)
        user_data.pop('youtube_tabs', None)
        user_data.pop('youtube_control_window', None)
        from bot import MAIN_COMMAND_BUTTONS
        await message.answer("–í—ã—Ö–æ–¥ –∏–∑ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è YouTube.", reply_markup=ReplyKeyboardMarkup(keyboard=MAIN_COMMAND_BUTTONS, resize_keyboard=True))
        return 'CANCELLED'

    if text.isdigit() and user_data.get('youtube_tabs'):
        idx = int(text) - 1
        tabs = user_data.get('youtube_tabs', [])
        if 0 <= idx < len(tabs):
            try:
                win = gw.getWindowsWithTitle(tabs[idx])[0]
                win.activate()
                user_data['youtube_control_window'] = tabs[idx]
                await message.answer(f"–í–∫–ª–∞–¥–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞: {tabs[idx]}", reply_markup=control_keyboard)
            except (IndexError, pygetwindow.PyGetWindowException) as e:
                await message.answer(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–∫–Ω–æ: {e}", reply_markup=keyboard)
        else:
            await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –≤–∫–ª–∞–¥–∫–∏.", reply_markup=keyboard)
        return

    if "youtube.com" in text or "youtu.be" in text:
        os.system(f'start "" "{text}"')
        await message.answer("–í–∏–¥–µ–æ –æ—Ç–∫—Ä—ã—Ç–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.", reply_markup=keyboard)
        await youtube(message, user_data) # Refresh list
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∫–ª–∞–¥–∫—É.", reply_markup=keyboard)

async def youtube_control(message: types.Message, user_data: dict = None):
    if user_data is None:
        user_data = {}
    text = message.text
    control_keyboard = ReplyKeyboardMarkup(keyboard=YOUTUBE_CONTROL_BUTTONS, resize_keyboard=True)
    window_title = user_data.get('youtube_control_window')

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞/–æ—Ç–º–µ–Ω—ã
    if text in ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "/cancel"]:
        user_data.pop('youtube_mode', None)
        user_data.pop('youtube_tabs', None)
        user_data.pop('youtube_control_window', None)
        from bot import MAIN_COMMAND_BUTTONS
        await message.answer("–í—ã—Ö–æ–¥ –∏–∑ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è YouTube.", reply_markup=ReplyKeyboardMarkup(keyboard=MAIN_COMMAND_BUTTONS, resize_keyboard=True))
        return 'CANCELLED'

    if not window_title:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∫–ª–∞–¥–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.", reply_markup=YOUTUBE_BUTTONS)
        user_data.clear()
        return
        
    try:
        win = gw.getWindowsWithTitle(window_title)[0]
        win.activate()
    except (IndexError, pygetwindow.PyGetWindowException):
        await message.answer("–û–∫–Ω–æ YouTube –±–æ–ª—å—à–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –≤–∫–ª–∞–¥–∫—É.", reply_markup=YOUTUBE_BUTTONS)
        user_data.clear()
        return

    command_map = {
        "‚èØÔ∏è –ü–∞—É–∑–∞/–í–æ—Å–ø—Ä.": "space",
        "‚è© –í–ø–µ—Ä—ë–¥ 5—Å": "right",
        "‚è™ –ù–∞–∑–∞–¥ 5—Å": "left",
        "üîä –ì—Ä–æ–º—á–µ": "up",
        "üîâ –¢–∏—à–µ": "down",
        "üî≤ –ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω": "f",
        "üî≥ –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º": "esc",
        "‚èπÔ∏è –°—Ç–æ–ø": "k"
    }

    if text in command_map:
        pyautogui.press(command_map[text])
        await message.answer(f"–ö–æ–º–∞–Ω–¥–∞ '{text}' –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.", reply_markup=control_keyboard)
    else:
        await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.", reply_markup=control_keyboard)
