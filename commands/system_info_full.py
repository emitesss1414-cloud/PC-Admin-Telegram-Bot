import os
import psutil
import getpass
import socket
import platform
from aiogram import types

def get_gpu_info():
    # This is a placeholder. Getting GPU info on Windows without external libraries is complex.
    # We can try to parse dxdiag output, but it's not ideal.
    # For now, we will return a placeholder.
    return "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å"

async def system_info_full(message: types.Message, user_data: dict = None):
    if user_data is None:
        user_data = {}
    # allow user to cancel / go back at any time
    if message.text in ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "/cancel"]:
        try:
            from bot import MAIN_COMMAND_BUTTONS
            await message.answer("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=types.ReplyKeyboardMarkup(keyboard=MAIN_COMMAND_BUTTONS, resize_keyboard=True))
        except Exception:
            await message.answer("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
        return 'CANCELLED'

    user = getpass.getuser()
    hostname = socket.gethostname()
    os_name = platform.system()
    os_version = platform.version()
    cpu = platform.processor()
    ram = round(psutil.virtual_memory().total / (1024**3), 2)
    disk_path = os.path.abspath(os.sep)
    disk = round(psutil.disk_usage(disk_path).total / (1024**3), 2)
    arch = platform.architecture()[0]
    gpu = get_gpu_info()
    model = f"{platform.system()} {platform.machine()}"

    info = (
        "üñ•Ô∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–ö</b>\n\n"
        f"üíª <b>–ò–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b> <code>{hostname}</code>\n"
        f"üè∑Ô∏è <b>–ú–æ–¥–µ–ª—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:</b> <code>{model}</code>\n"
        f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <code>{user}</code>\n"
        f"üñ•Ô∏è <b>–û–°:</b> <code>{os_name} ({os_version})</code>\n"
        f"üß† <b>–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:</b> <code>{cpu}</code>\n"
        f"üéÆ <b>–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞:</b> <code>{gpu}</code>\n"
    f"üíæ <b>–û–ó–£:</b> <code>{ram} –ì–ë</code>\n"
    f"üóÑÔ∏è <b>–î–∏—Å–∫ ({disk_path}):</b> <code>{disk} –ì–ë</code>\n"
        f"üî¢ <b>–¢–∏–ø —Å–∏—Å—Ç–µ–º—ã:</b> <code>{arch}</code>\n"
    )
    await message.answer(info, parse_mode="HTML")
